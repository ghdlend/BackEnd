package Package1;

public class TypeCasting {

	public static void main(String[] args) {
		// 타입변환
		// 데이터 타입을 다른 타입으로 변환하는 것
		// 묵시적(자동) 타입 변환 : promotion
		// 명시적(강제) 타입 변환 : casting
		// 타입변환은 변수의 타입이 저장하고자 하는 리터럴 크기보다 크거나 작을 때
		
		// 자동 타입 변환 : 작은 크기 타입이 큰 크기 타입으로 저장될 때
		// long(8byte)형을 float(4byte)형에 저장 할 수 있음
		// byte 크기가 아닌 값의 표현 범위에 따라 규정
		// byte < short < int < long < float < double
		
		//자동타입변환
		byte byteVal = 10;
		int intVal = byteVal; //모두 정수타입 int가 더 큰 범위 - 자동형변환 발생
		System.out.println(intVal);
		
		char chrVal = '가';
		intVal = chrVal;
		System.out.println(intVal); //44032 출력 44032는 '가'의 유니코드 값
		
		long lngVal = 258960; //8byte
		float flVal = lngVal; //4byte - 값의 표현 범위는 float의 범위가 더 넓음
		System.out.println(flVal);
		
		// 강제 형 변환
		// intVal = flVal; //float형의 표현범위가 int형 보다 커서 대입 불가
		flVal = 15.369847f; //데이터 손실이 발생
		intVal = (int)flVal; //강제 int형으로 변환
		System.out.println(intVal);
	
		intVal = 103029770;
		byte byteValue = (byte)intVal; //큰 정수타입을 작은 정수타입으로 강제 형 변환
		System.out.println(byteValue);
		
		intVal = 44032;
		chrVal = (char)intVal;
		System.out.println(chrVal);
	
		// 강제 타입 변환 시 주의
		// 값의 손실 발생 타입 범위 확인해서 형변환 결정
		// 기본타입에 대해서 자바는 객체로 구성해 놓았음
		// 기본타입객체.MIN_VALUE/기본타입객체.MAX_VALUE
		// .ex Byte.MIN_VALUE, Int.MAX_VALUE
		// 정밀도 손실 발생 가능
		// float의 가수 23bit보다 큰 int값을 float로 변환할 때 손실 발생
		// -> int를 실수로 변경하고자 할 때는 double형으로 변환
		
		// 연산식에서 자동 타입 변환
		int intVal1 = 10;
		double doubleVal1 = 5.5;
		
		double result = intVal1 + doubleVal1;
		System.out.println(result);
		
		int intVal4 = intVal1 / 4;
		System.out.println(intVal4);
		System.out.println(intVal1/4.0); //정수 / 실수 -> 실수(double)
		intVal4 = (int)(intVal1 / 4.0); //연산결과과 double여서 int형으로 자동형변환 불가능
		
		
		
		
		
		
		
		
		
		
		
	
	}

}
